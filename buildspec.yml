version: 0.2

# Pre-requisites
# - Create CodeBuild project
#   - Provide minimal github credentials to access public repo

phases:
  pre_build:
    on-failure: ABORT
    commands:
    - COMMIT=`git rev-parse --short HEAD`
    - BRANCH=`git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || echo ''`
    - TAG=`git describe --tags --exact-match 2> /dev/null || echo ''`
    - BRANCHTAG=`git describe --tags --exact-match 2> /dev/null || git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || git rev-parse --short HEAD`
    - echo "Branchtag ${BRANCHTAG}"

    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${ECR_REGISTRY}

    - aws ecr create-repository --repository-name mysql-ruby-lambda || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name uc3-mrt-admin-common || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name uc3-mrt-admin-lambda || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name uc3-mrt-colladmin-lambda || echo 'ignore if exists...'
    - aws ecr create-repository --repository-name uc3-mrt-cognitousers || echo 'ignore if exists...'

  build:
    on-failure: ABORT
    commands:
    # the following is rarely modified by code changes
    - |
      docker build --pull --quiet --push \
        -t ${ECR_REGISTRY}/mysql-ruby-lambda mysql-ruby-lambda
    # common code is not executed as a deployed lambda... use branch name only
    - |
      docker build --pull --quiet --push \
        --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
        -t ${ECR_REGISTRY}/uc3-mrt-admin-common:${BRANCH} src-common
    # use tag or branch for the deployed image
    - |
      docker build --pull --quiet --push \
        --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
        -t ${ECR_REGISTRY}/uc3-mrt-admin-lambda:${BRANCHTAG} src-admintool
    # use tag or branch for the deployed image
    - |
      docker build --pull --quiet --push \
        --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
        -t ${ECR_REGISTRY}/uc3-mrt-colladmin-lambda:${BRANCHTAG} src-colladmin
    # the following is rarely modified by code changes
    - |
      docker build --pull --quiet --push \
        --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
        -t ${ECR_REGISTRY}/uc3-mrt-cognitousers cognito-lambda-nonvpc
