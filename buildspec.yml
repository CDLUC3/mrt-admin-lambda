version: 0.2

# Pre-requisites
# - Create CodeBuild project
#   - Provide minimal github credentials to access public repo

phases:
  pre_build:
    on-failure: ABORT
    commands:
    - COMMIT=`git rev-parse --short HEAD`
    - BRANCH=`git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || echo ''`
    - TAG=`git describe --tags --exact-match 2> /dev/null || echo ''`
    - BRANCHTAG=`git describe --tags --exact-match 2> /dev/null || git symbolic-ref -q --short HEAD || git name-rev $(git rev-parse --short HEAD) | cut -d' ' -f2 || git rev-parse --short HEAD`
    - DOCKTAG=$BRANCHTAG
    - COMMITDATE=`git --no-pager log -1 --pretty='format:%cd' --date='format:%Y-%m-%d %H:%M:%S'`
    - echo "Branchtag ${BRANCHTAG}; COMMITDATE=${COMMITDATE}"

    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${ECR_REGISTRY}

  build:
    on-failure: ABORT
    commands:
    - |
      docker build --quiet --push \
        -t ${ECR_REGISTRY}/mysql-ruby-lambda mysql-ruby-lambda
    # common code is not executed as a deployed lambda... do not tag
    - |
      docker build --quiet --push \
        --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
        -t ${ECR_REGISTRY}/uc3-mrt-admin-common src-common
    # use tag or branch for the deployed image
    - |
      docker build --quiet --push \
        --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
        --build-arg COMMITDATE="${COMMITDATE}" \
        --build-arg DOCKTAG="${DOCKTAG}" \
        -t ${ECR_REGISTRY}/uc3-mrt-admin-lambda:${DOCKTAG} src-admintool
    # use tag or branch for the deployed image
    - |
      docker build --quiet --push \
        --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
        --build-arg COMMITDATE="${COMMITDATE}" \
        --build-arg DOCKTAG="${DOCKTAG}" \
        -t ${ECR_REGISTRY}/uc3-mrt-colladmin-lambda:${DOCKTAG} src-colladmin
    # the following is rarely modified by code changes
    - |
      docker build --quiet --push \
        --build-arg ECR_REGISTRY=${ECR_REGISTRY} \
        -t ${ECR_REGISTRY}/uc3-mrt-cognitousers cognito-lambda-nonvpc
    # report results
    - mkdir -p reports
    - RPT=reports/mrt-admin-lambda.md
    - echo "## Semantic Tags" > $RPT
    - echo "" > $RPT
    - echo "|tag|date|" > $RPT
    - echo "|-|-|" > $RPT
    - git for-each-ref --sort=-creatordate --format '|%(refname)|%(creatordate:short)|' refs/tags | egrep "tags/[0-9]+\.[0-9]+\.[0-9]+ " | sed -e "s/refs\/tags\///" | head -10 >> $RPT
    - echo "" > $RPT
    - echo "## Feature Tags" >> $RPT
    - echo "" > $RPT
    - echo "|tag|date|" > $RPT
    - echo "|-|-|" > $RPT
    - git for-each-ref --sort=-creatordate --format '|%(refname)|%(creatordate:short)|' refs/tags | egrep -v "tags/[0-9]+\.[0-9]+\.[0-9]+ " | sed -e "s/refs\/tags\///" | head -10 >> $RPT
    - echo "" > $RPT
    - aws s3 cp $RPT s3://${S3CFBUCKET}/$RPT
    - aws cloudfront create-invalidation --distribution-id ${CFDISTRIBUTIONID} --paths /reports/* --region us-east-1