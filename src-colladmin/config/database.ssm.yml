default:
  dbconf:
    adapter: mysql2
    encoding: utf8mb4
    collation: utf8mb4_unicode_ci
    host: "{!SSM: inv/db-host}"
    database: "{!SSM: inv/db-name}"
    port: 3306
    username: "{!SSM: inv/readwrite/db-user}"
    password: "{!SSM: inv/readwrite/db-password}"
  merritt_path: "{!ENV: MERRITT_PATH !DEFAULT: https://merritt.cdlib.org}"
  ingest-services: "{!SSM: colladmin/ingest-service}"
  ldap:
    admin_password: "{!SSM: ldap/accounts/admin/password}"
    admin_user:     "{!SSM: ldap/accounts/admin/user}"
    group_base:     "{!SSM: ldap/group_base}"
    host:           "{!SSM: ldap/host}"
    port:           "{!SSM: ldap/port}"
    user_base:      "{!SSM: ldap/user-base}"
    inst_base:      "{!SSM: ldap/inst-base}"
    ark_minter_url: "{!SSM: ldap/ark_minter_url}"
    guest_password: "{!SSM: ldap/accounts/guest/password}"
    guest_user:     "{!SSM: ldap/accounts/guest/user}"
    encryption:     "simple_tls"
    tls:            "TLSv1_2"
    connect_timeout: 60
  s3-bucket: "{!SSM: admintool/s3-bucket}"
  s3-consistency-reports: "{!SSM: admintool/s3-consistency-reports}"
  user-pool: "{!SSM: colladmin/user-pool !DEFAULT: NA}"
  # Interface to Cognito API (via Lambda)
  cognito-users-arn: "{!SSM: cognito-users/lambda-arn-base !DEFAULT: NA}"
  cognito-groups-to-manage: "{!SSM: colladmin/cognito-groups-to-manage !DEFAULT: NA}"
  # Value to be checked against Cognito token - passively provided by ALB
  cognito-groups-allowed: "{!SSM: colladmin/cognito-groups-allowed !DEFAULT: NA}"
  context: "{!SSM: admintool/context !DEFAULT: NA}"
  notes:
    # newlines will become comma separators to create bullets. Do not use commas in these blocks.
    store: |
      jsonstatus: lightweight check of node availability WITH timeout if node is unavailable
      state: Test of read/write for each node WITH timeout (as of 3/24). Used in periodic Nagios checks; can recover access to a node that has temporarily gone offline.
      ping: confirm that tomcat is running; returns server start time
      hostname: used by ALB checks; allows ingest to communicate with a specific store instance
    access: |
      jsonstatus: lightweight check of node availability WITH timeout if node is unavailable
      state: legacy test of read/write for each node WITH timeout (as of 3/24).
      ping: confirm that tomcat is running; returns server start time
      hostname: used by ALB checks
    audit: |
      jsonstatus: lightweight check of node availability WITH timeout if node is unavailable
      state: service status check without node evaluation; returns server start time
    replic: |
      jsonstatus: lightweight check of node availability
      state: service status check without node evaluation; returns server start time
    ingest: |
      state: service status check; returns server start time; used by ALB health check
    inventory: |
      state: service status check; returns server start time; used by ALB health check
    ui: |
      state: view status and build build-info
      audit_rep: view audit and replic activity stats
      ALB links to a public URL.  Lambda cannot access the public URL.
    ldap: |
      ALB exists.  LDAP admin requires credentials to access. Navigate to "Merritt User Accounts" to query LDAP.
  # Provide state endpoints for specific subservices - not applicable for docker
  server-configs:
    al2-stg:
      match: '.*x2-stg$'
      endpoints:
        ui: 
          -al2-config: "#default"
        ldap: 
          -ALB: "https://{!SSM: ldap/host}"
    al2023prd:
      match: '.*prd[0-9][0-9]$'
      endpoints:
        ingest: 
          state: "{!SSM: ingest/port}/state?t=json"
          build-info: "{!SSM: ingest/port}/static/build.content.txt"
          ALB: "{!SSM: colladmin/ingest-service}state?t=json"
        store: 
          jsonstatus: "{!SSM: store/port}/jsonstatus"
          state: "{!SSM: store/port}/state?t=json"
          ping: "{!SSM: store/port}/ping?t=json"
          hostname: "{!SSM: store/port}/hostname"
          build-info: "{!SSM: store/port}/static/build.content.txt"
          ALB: "{!SSM: colladmin/storage-service}/state?t=json"
        access: 
          jsonstatus: "{!SSM: store/port}/jsonstatus"
          state: "{!SSM: store/port}/state?t=json"
          ping: "{!SSM: store/port}/ping?t=json"
          hostname: "{!SSM: store/port}/hostname"
          build-info: "{!SSM: store/port}/static/build.content.txt"
          ALB: "{!SSM: colladmin/access-service}/state?t=json"
        inventory: 
          state: "{!SSM: inventory/port}/state?t=json"
          build-info: "{!SSM: inventory/port}/static/build.content.txt"
          start: "{!SSM: inventory/port}/service/start?t=json"
          stop: "{!SSM: inventory/port}/service/stop?t=json"
          ALB: "{!SSM: colladmin/inventory-service}/state?t=json"
        audit: 
          jsonstatus: "{!SSM: audit/port}/jsonstatus"
          state: "{!SSM: audit/port}/state?t=json"
          build-info: "{!SSM: audit/port}/static/build.content.txt"
          start: "{!SSM: audit/port}/service/start?t=json"
          stop: "{!SSM: audit/port}/service/stop?t=json"
        replic: 
          jsonstatus: "{!SSM: replic/port}/jsonstatus"
          state: "{!SSM: replic/port}/state?t=json"
          build-info: "{!SSM: replic/port}/static/build.content.txt"
          start: "{!SSM: replic/port}/service/start?t=json"
          stop: "{!SSM: replic/port}/service/stop?t=json"
        ui: 
          state: "{!SSM: ui/port}/state.json"
          audit_rep: "{!SSM: ui/port}/state-audit-replic.json"
          +ALB: "{!ENV: MERRITT_PATH}/state.json"
        ldap: 
          -ALB: "https://{!SSM: ldap/host}"
    al2023:
      match: '.*stg[0-9][0-9]$'
      endpoints:
        ingest: 
          state: "{!SSM: ingest/port}/state?t=json"
          build-info: "{!SSM: ingest/port}/static/build.content.txt"
          ALB: "{!SSM: colladmin/ingest-service}state?t=json"
        store: 
          jsonstatus: "{!SSM: store/port}/jsonstatus"
          state: "{!SSM: store/port}/state?t=json"
          ping: "{!SSM: store/port}/ping?t=json"
          hostname: "{!SSM: store/port}/hostname"
          build-info: "{!SSM: store/port}/static/build.content.txt"
          ALB: "{!SSM: colladmin/storage-service}/state?t=json"
        access: 
          jsonstatus: "{!SSM: store/port}/jsonstatus"
          state: "{!SSM: store/port}/state?t=json"
          ping: "{!SSM: store/port}/ping?t=json"
          hostname: "{!SSM: store/port}/hostname"
          build-info: "{!SSM: store/port}/static/build.content.txt"
          ALB: "{!SSM: colladmin/access-service}/state?t=json"
        inventory: 
          state: "{!SSM: inventory/port}/state?t=json"
          build-info: "{!SSM: inventory/port}/static/build.content.txt"
          start: "{!SSM: inventory/port}/service/start?t=json"
          stop: "{!SSM: inventory/port}/service/stop?t=json"
          ALB: "{!SSM: colladmin/inventory-service}/state?t=json"
        audit: 
          jsonstatus: "{!SSM: audit/port}/jsonstatus"
          state: "{!SSM: audit/port}/state?t=json"
          build-info: "{!SSM: audit/port}/static/build.content.txt"
          start: "{!SSM: audit/port}/service/start?t=json"
          stop: "{!SSM: audit/port}/service/stop?t=json"
        replic: 
          jsonstatus: "{!SSM: replic/port}/jsonstatus"
          state: "{!SSM: replic/port}/state?t=json"
          build-info: "{!SSM: replic/port}/static/build.content.txt"
          start: "{!SSM: replic/port}/service/start?t=json"
          stop: "{!SSM: replic/port}/service/stop?t=json"
        ui: 
          state: "{!SSM: ui/port}/state.json"
          audit_rep: "{!SSM: ui/port}/state-audit-replic.json"
          +ALB: "{!ENV: MERRITT_PATH}/state.json"
        ldap: 
          -ALB: "https://{!SSM: ldap/host}"
    default:
      match: '.*'
      endpoints:
        ingest: 
          state: "{!SSM: ingest/port}/state?t=json"
          build-info: "{!SSM: ingest/port}/static/build.content.txt"
          ALB: "{!SSM: colladmin/ingest-service}state?t=json"
          -al2-config: "#default"
        store: 
          -al2-config: "#default"
        access: 
          -al2-config: "#default"
        inventory: 
          -al2-config: "#default"
        audit: 
          -al2-config: "#default"
        replic: 
          -al2-config: "#default"
        ui: 
          -al2-config: "#default"
        ldap: 
          -ALB: "https://{!SSM: ldap/host}"
          -al2-config: "#default"
  replic-service: "{!SSM: colladmin/replic-service}"
  storage-service: "{!SSM: colladmin/storage-service}"
  access-service: "{!SSM: colladmin/access-service}"
  inventory-service: "{!SSM: colladmin/inventory-service}"
  scan-use-keylist:
  - node: 9501
    keylist: 7001:scanlist/9501.log 
  - node: 9502
    keylist: 7001:scanlist/9502.log 
  disable-scan-nodenums: "{!SSM: colladmin/disable-scan-nodenums !DEFAULT: 0}"
  uc3inv_home: "{!SSM: admintool/uc3inv_home !DEFAULT: ''}"
# use personal credentials when configuring a local environment
# set up a script to set these variables
docker:
  dbconf:
    adapter: mysql2
    encoding: utf8mb4
    collation: utf8mb4_unicode_ci
    host: db-container
    database: db-name
    username: user
    password: password
    port: 3306
  merritt_path: "{!ENV: MERRITT_PATH !DEFAULT: https://merritt.cdlib.org}"
  ingest-services: "{!ENV: INGEST_SERVICES}"
  replic-service: "TBD"
  storage-service: "TBD"
  inventory-service: "TBD"
  ldap: 
    admin_password: password
    admin_user:     cn=Directory Manager
    group_base:     ou=mrt-classes,ou=uc3,dc=cdlib,dc=org
    host:           ldap
    port:           1389
    user_base:      ou=People,ou=uc3,dc=cdlib,dc=org
    inst_base:      o=institutions,ou=uc3,dc=cdlib,dc=org
    ark_minter_url: http://noid.cdlib.org/nd/noidu_p9
    guest_password: guest
    guest_user:     anonymous
    connect_timeout: 60
  s3-bucket: ""
  s3-consistency-reports: "consistency-reports"
  user-pool: "NA"
  cognito-users-arn: "NA"
  cognito-groups-allowed: "NA"
  cognito-groups-to-manage: "NA"
  context: "NA"
  # Provide state endpoints for specific subservices - not applicable for docker
  endpoints:
  uc3inv_home: ""

