default:
  dbconf:
    adapter: mysql2
    encoding: utf8mb4
    collation: utf8mb4_unicode_ci
    host: "{!SSM: inv/db-host}"
    database: "{!SSM: inv/db-name}"
    port: 3306
    username: "{!SSM: inv/readwrite/db-user}"
    password: "{!SSM: inv/readwrite/db-password}"
  merritt_path: "{!ENV: MERRITT_PATH !DEFAULT: https://merritt.cdlib.org}"
  ingest-services: "{!SSM: colladmin/ingest-service}"
  ldap:
    admin_password: "{!SSM: ldap/accounts/admin/password}"
    admin_user:     "{!SSM: ldap/accounts/admin/user}"
    group_base:     "{!SSM: ldap/group_base}"
    host:           "{!SSM: ldap/host}"
    port:           "{!SSM: ldap/port}"
    user_base:      "{!SSM: ldap/user-base}"
    inst_base:      "{!SSM: ldap/inst-base}"
    ark_minter_url: "{!SSM: ldap/ark_minter_url}"
    guest_password: "{!SSM: ldap/accounts/guest/password}"
    guest_user:     "{!SSM: ldap/accounts/guest/user}"
    encryption:     "simple_tls"
    tls:            "TLSv1_2"
    connect_timeout: 60
  s3-bucket: "{!SSM: admintool/s3-bucket}"
  s3-consistency-reports: "{!SSM: admintool/s3-consistency-reports}"
  user-pool: "{!SSM: colladmin/user-pool !DEFAULT: NA}"
  # Interface to Cognito API (via Lambda)
  cognito-users-arn: "{!SSM: cognito-users/lambda-arn-base !DEFAULT: NA}"
  cognito-groups-to-manage: "{!SSM: colladmin/cognito-groups-to-manage !DEFAULT: NA}"
  # Value to be checked against Cognito token - passively provided by ALB
  cognito-groups-allowed: "{!SSM: colladmin/cognito-groups-allowed !DEFAULT: NA}"
  context: "{!SSM: admintool/context !DEFAULT: NA}"
  notes:
    # newlines will become comma separators to create bullets. Do not use commas in these blocks.
    store: |
      #jsonstatus: lightweight check of node availability
      jsonstate: tests read/write for each node
      state: legacy test of read/write for each node with NO timeout
      ping: confirm that tomcat is running
    access: |
      jsonstatus: lightweight check of node availability
      jsonstate: tests read/write for each node
      state: legacy test of read/write for each node with NO timeout
      ping: confirm that tomcat is running
    audit: |
      jsonstatus: lightweight check of node availability
      jsonstate: tests read/write for each node
      state: legacy service status check without node evaluation
    replic: |
      jsonstatus: lightweight check of node availability
      jsonstate: tests read/write for each node
      state: legacy service status check without node evaluation
    ui: |
      state: view status and build build-info
      audit_rep: view audit and replic activity stats
      ALB links to a public URL.  Lambda cannot access the public URL.
    ldap: |
      ALB exists.  LDAP admin requires credentials to access. Navigate to "Merritt User Accounts" to query LDAP.
  # Provide state endpoints for specific subservices - not applicable for docker
  endpoints:
    ingest: 
      state: "{!SSM: ingest/port}/state?t=json"
      build-info: "{!SSM: ingest/port}/static/build.content.txt"
      ALB: "{!SSM: colladmin/ingest-service}state?t=json"
    store: 
      #jsonstatus: "{!SSM: store/port}/jsonstatus"
      jsonstate: "{!SSM: store/port}/jsonstate"
      state: "{!SSM: store/port}/state?t=json"
      ping: "{!SSM: store/port}/ping?t=json"
      build-info: "{!SSM: store/port}/static/build.content.txt"
      ALB: "{!SSM: colladmin/storage-service}/state?t=json"
    access: 
      #jsonstatus: "{!SSM: store/port}/jsonstatus"
      jsonstate: "{!SSM: store/port}/jsonstate"
      state: "{!SSM: store/port}/state?t=json"
      ping: "{!SSM: store/port}/ping?t=json"
      build-info: "{!SSM: store/port}/static/build.content.txt"
      ALB: "{!SSM: colladmin/access-service}/state?t=json"
    inventory: 
      state: "{!SSM: inventory/port}/mrtinv/state?t=json"
      build-info: "{!SSM: inventory/port}/mrtinv/static/build.content.txt"
      start: "{!SSM: inventory/port}/mrtinv/service/start?t=json"
      stop: "{!SSM: inventory/port}/mrtinv/service/stop?t=json"
      ALB: "{!SSM: colladmin/inventory-service}/state?t=json"
    audit: 
      #jsonstatus: "{!SSM: audit/port}/mrtaudit/jsonstatus"
      jsonstate: "{!SSM: audit/port}/mrtaudit/jsonstate"
      state: "{!SSM: audit/port}/mrtaudit/state?t=json"
      build-info: "{!SSM: audit/port}/mrtaudit/static/build.content.txt"
      start: "{!SSM: audit/port}/mrtaudit/service/start?t=json"
      stop: "{!SSM: audit/port}/mrtaudit/service/stop?t=json"
    replic: 
      #jsonstatus: "{!SSM: replic/port}/mrtreplic/jsonstatus"
      jsonstate: "{!SSM: replic/port}/mrtreplic/jsonstate"
      state: "{!SSM: replic/port}/mrtreplic/state?t=json"
      build-info: "{!SSM: replic/port}/mrtreplic/static/build.content.txt"
      start: "{!SSM: replic/port}/mrtreplic/service/start?t=json"
      stop: "{!SSM: replic/port}/mrtreplic/service/stop?t=json"
    ui: 
      state: "/state.json"
      audit_rep: "/state-audit-replic.json"
      +ALB: "{!ENV: MERRITT_PATH}/state.json"
    ldap: 
      -ALB: "https://{!SSM: ldap/host}"
  replic-service: "{!SSM: colladmin/replic-service}"
  storage-service: "{!SSM: colladmin/storage-service}"
  access-service: "{!SSM: colladmin/access-service}"
  inventory-service: "{!SSM: colladmin/inventory-service}"
  scan-use-keylist:
  - node: 9501
    keylist: 7001:scanlist/9501.log 
  - node: 9502
    keylist: 7001:scanlist/9502.log 
  disable-scan-nodenums: "{!SSM: colladmin/disable-scan-nodenums !DEFAULT: 0}"
  uc3inv_home: "{!SSM: admintool/uc3inv_home !DEFAULT: ''}"
# use personal credentials when configuring a local environment
# set up a script to set these variables
docker:
  dbconf:
    adapter: mysql2
    encoding: utf8mb4
    collation: utf8mb4_unicode_ci
    host: db-container
    database: db-name
    username: user
    password: password
    port: 3306
  merritt_path: "{!ENV: MERRITT_PATH !DEFAULT: https://merritt.cdlib.org}"
  ingest-services: "{!ENV: INGEST_SERVICES}"
  replic-service: "TBD"
  storage-service: "TBD"
  inventory-service: "TBD"
  ldap: 
    admin_password: password
    admin_user:     cn=Directory Manager
    group_base:     ou=mrt-classes,ou=uc3,dc=cdlib,dc=org
    host:           ldap
    port:           1389
    user_base:      ou=People,ou=uc3,dc=cdlib,dc=org
    inst_base:      o=institutions,ou=uc3,dc=cdlib,dc=org
    ark_minter_url: http://noid.cdlib.org/nd/noidu_p9
    guest_password: guest
    guest_user:     anonymous
    connect_timeout: 60
  s3-bucket: ""
  s3-consistency-reports: "consistency-reports"
  user-pool: "NA"
  cognito-users-arn: "NA"
  cognito-groups-allowed: "NA"
  cognito-groups-to-manage: "NA"
  context: "NA"
  # Provide state endpoints for specific subservices - not applicable for docker
  endpoints:
  uc3inv_home: ""

